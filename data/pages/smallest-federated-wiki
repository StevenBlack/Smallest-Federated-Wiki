{"title":"Smallest Federated Wiki","story":[{"text":"Our new wiki innovates three ways. It shares through federation, composes by refactoring and wraps data with visualization. Follow our open development on GitHub or just watch our work in progress videos here.","id":"48d39ab8cd72a394","type":"paragraph"},{"text":"<iframe width=\"400\" height=\"250\" frameborder=\"0\" src=\"http://player.vimeo.com/video/27671065?title=0&byline=0&portrait=0\" style=\"-moz-box-shadow: 5px 8px 10px 5px #888;-webkit-box-shadow: 5px 8px 10px 5px #888;box-shadow: 5px 8px 10px 5px #888;\"></iframe>\n\n<p>\nWe introduce the parts of a Federated Wiki page. The \"story\" is a collection of paragraphs and paragraph like items. The \"journal\" collects story edits. Should you take my page and edit it as yours, I can see what you've done and may decide to take your edits as my own.\n\n</p>","id":"48d39ab8cd72a191","type":"paragraph"},{"text":"<iframe width=\"400\" height=\"250\" frameborder=\"0\" src=\"http://player.vimeo.com/video/27671347?title=0&byline=0&portrait=0\" style=\"-moz-box-shadow: 5px 8px 10px 5px #888;-webkit-box-shadow: 5px 8px 10px 5px #888;box-shadow: 5px 8px 10px 5px #888;\"></iframe>\n\n<p>\nWe show how drag-and-drop between federated wiki pages creates a new model for sharing. A simple JSON model of the page makes this all straightforward.\n</p>","id":"48d39ab8cd74a391","type":"paragraph"},{"text":"<iframe width=\"400\" height=\"250\" frameborder=\"0\" src=\"http://player.vimeo.com/video/27673743?title=0&byline=0&portrait=0\" style=\"-moz-box-shadow: 5px 8px 10px 5px #888;-webkit-box-shadow: 5px 8px 10px 5px #888;box-shadow: 5px 8px 10px 5px #888;\"></iframe>\n\n<p>\nWe explore how a federated wiki's page elements get converted to HTML. The conversion happens on the client side. Coffeescript code uses the type of each story item to retrieve \"emit\" and \"bind\" functions. Emit creates the HTML DOM objects while bind connects them up to jQuery.\n</p>\n","id":"48d39ab8cc74a381","type":"paragraph"},{"id":"db40c775e6de339d","type":"factory"}],"journal":[{"order":["48d39ab8cd72a394","db40c775e6de339d"],"id":"48d39ab8cd72a394","type":"move"},{"text":"I am text","id":"48d39ab8cd72a394","type":"edit"},{"text":"Our new wiki innovates three ways. It shares through federation, composes by refactoring and wraps data with visualization. Follow our open development on GitHub or just watch our work in progress videos here.","id":"48d39ab8cd72a394","type":"edit"},{"text":"O","id":"48d39ab8cd72a191","type":"edit"},{"text":"\nWe introduce the parts of a Federated Wiki page. The \"story\" is a collection of paragraphs and paragraph like items. The \"journal\" collects story edits. Should you take my page and edit it as yours, I can see what you've done and may decide to take your edits as my own.\n\n","id":"48d39ab8cd72a191","type":"edit"},{"text":"<iframe width=\"400\" height=\"250\" frameborder=\"0\" src=\"http://player.vimeo.com/video/27671065?title=0&amp;byline=0&amp;portrait=0\" style=\"-moz-box-shadow: 5px 8px 10px 5px #888;-webkit-box-shadow: 5px 8px 10px 5px #888;box-shadow: 5px 8px 10px 5px #888;\"></iframe>\n\nWe introduce the parts of a Federated Wiki page. The \"story\" is a collection of paragraphs and paragraph like items. The \"journal\" collects story edits. Should you take my page and edit it as yours, I can see what you've done and may decide to take your edits as my own.\n\n","id":"48d39ab8cd72a191","type":"edit"},{"text":"<iframe width=\"400\" height=\"250\" frameborder=\"0\" src=\"http://player.vimeo.com/video/27671347?title=0&amp;byline=0&amp;portrait=0\" style=\"-moz-box-shadow: 5px 8px 10px 5px #888;-webkit-box-shadow: 5px 8px 10px 5px #888;box-shadow: 5px 8px 10px 5px #888;\"></iframe>\n\nWe show how drag-and-drop between federated wiki pages creates a new model for sharing. A simple JSON model of the page makes this all straightforward.","id":"48d39ab8cd74a391","type":"edit"},{"text":"<iframe width=\"400\" height=\"250\" frameborder=\"0\" src=\"http://player.vimeo.com/video/27673743?title=0&amp;byline=0&amp;portrait=0\" style=\"-moz-box-shadow: 5px 8px 10px 5px #888;-webkit-box-shadow: 5px 8px 10px 5px #888;box-shadow: 5px 8px 10px 5px #888;\"></iframe>\n\nWe explore how a federated wiki's page elements get converted to HTML. The conversion happens on the client side. Coffeescript code uses the type of each story item to retrieve \"emit\" and \"bind\" functions. Emit creates the HTML DOM objects while bind connects them up to jQuery.\n","id":"48d39ab8cc74a381","type":"edit"},{"text":"<iframe width=\"400\" height=\"250\" frameborder=\"0\" src=\"http://player.vimeo.com/video/27671065?title=0&byline=0&portrait=0\" style=\"-moz-box-shadow: 5px 8px 10px 5px #888;-webkit-box-shadow: 5px 8px 10px 5px #888;box-shadow: 5px 8px 10px 5px #888;\"></iframe>\n\n<p>\nWe introduce the parts of a Federated Wiki page. The \"story\" is a collection of paragraphs and paragraph like items. The \"journal\" collects story edits. Should you take my page and edit it as yours, I can see what you've done and may decide to take your edits as my own.\n\n</p>","id":"48d39ab8cd72a191","type":"edit"},{"text":"<iframe width=\"400\" height=\"250\" frameborder=\"0\" src=\"http://player.vimeo.com/video/27671347?title=0&byline=0&portrait=0\" style=\"-moz-box-shadow: 5px 8px 10px 5px #888;-webkit-box-shadow: 5px 8px 10px 5px #888;box-shadow: 5px 8px 10px 5px #888;\"></iframe>\n\n<p>\nWe show how drag-and-drop between federated wiki pages creates a new model for sharing. A simple JSON model of the page makes this all straightforward.\n</p>","id":"48d39ab8cd74a391","type":"edit"},{"text":"<iframe width=\"400\" height=\"250\" frameborder=\"0\" src=\"http://player.vimeo.com/video/27673743?title=0&byline=0&portrait=0\" style=\"-moz-box-shadow: 5px 8px 10px 5px #888;-webkit-box-shadow: 5px 8px 10px 5px #888;box-shadow: 5px 8px 10px 5px #888;\"></iframe>\n\n<p>\nWe explore how a federated wiki's page elements get converted to HTML. The conversion happens on the client side. Coffeescript code uses the type of each story item to retrieve \"emit\" and \"bind\" functions. Emit creates the HTML DOM objects while bind connects them up to jQuery.\n</p>\n","id":"48d39ab8cc74a381","type":"edit"},{"id":"48d39ab8cc74a381","type":"edit","item":{"text":"<iframe width=\"400\" height=\"250\" frameborder=\"0\" src=\"http://player.vimeo.com/video/27673743?title=0&byline=0&portrait=0\" style=\"-moz-box-shadow: 5px 8px 10px 5px #888;-webkit-box-shadow: 5px 8px 10px 5px #888;box-shadow: 5px 8px 10px 5px #888;\"></iframe>\n\n<p>\nWe explore how a federated wiki's page elements get converted to HTML. The conversion happens on the client side. Coffeescript code uses the type of each story item to retrieve \"emit\" and \"bind\" functions. Emit creates the HTML DOM objects while bind connects them up to jQuery. ...\n</p>\n","id":"48d39ab8cc74a381","type":"paragraph"}},{"id":"48d39ab8cc74a381","type":"edit","item":{"text":"<iframe width=\"400\" height=\"250\" frameborder=\"0\" src=\"http://player.vimeo.com/video/27673743?title=0&byline=0&portrait=0\" style=\"-moz-box-shadow: 5px 8px 10px 5px #888;-webkit-box-shadow: 5px 8px 10px 5px #888;box-shadow: 5px 8px 10px 5px #888;\"></iframe>\n\n<p>\nWe explore how a federated wiki's page elements get converted to HTML. The conversion happens on the client side. Coffeescript code uses the type of each story item to retrieve \"emit\" and \"bind\" functions. Emit creates the HTML DOM objects while bind connects them up to jQuery.\n</p>\n","id":"48d39ab8cc74a381","type":"paragraph"}}]}